/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.me.Videoviewapp;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader; 
import javax.swing.table.DefaultTableCellRenderer;  
import javax.swing.table.TableColumn;

/**
 *
 * @author Administrator
 */
public class Videoview extends javax.swing.JFrame {

    /**
     * Creates new form Videoview
     */
    public Videoview() {
        this.setResizable(false);
        initComponents();
        
    }
    
    
  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
       
        tableModel = new DefaultTableModel(tableVales,columnNames);
        jTable1 = new javax.swing.JTable(tableModel);
        //设置第一列宽度
        TableColumn tcl = jTable1.getColumnModel().getColumn(0);  
        tcl.setPreferredWidth(400);
        //表内容居中
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();   
        //r.setHorizontalAlignment(JLabel.CENTER);   
        r.setHorizontalAlignment(DefaultTableCellRenderer.CENTER); 
        jTable1.setDefaultRenderer(Object.class,r);  
        //设置表内容字体
        jTable1.setFont(new Font("Dialog", Font.BOLD, 15));
        //设置表内容宽度
        jTable1.setRowHeight(25);   
        
        JTableHeader tableHeader =  jTable1.getTableHeader();  
        DefaultTableCellRenderer hr = (DefaultTableCellRenderer) tableHeader.getDefaultRenderer();  
        hr.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);    //表标题居中
        tableHeader.setFont(new Font("Dialog", Font.BOLD, 15));    //设置表标题字体
        
        
        progressbar = new javax.swing.JProgressBar(0,100);
        progressbar.setValue(0);
        progressbar.setStringPainted(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBox1.setText("240");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("360");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("480");
        jCheckBox3.setSelected(true);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        
        jCheckBox4.setText("720");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        
        jCheckBox5.setText("1080");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        
        jButton3.setText("暂停");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             jButton3ActionPerformed(evt);
         }
     });
        
        jButton2.setText("开始");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
       // jButton2.addActionListener(Progress);//为按钮添加动作事件
        
        jButton1.setText("浏览");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        
        jScrollPane1.setViewportView(jTable1);
        
        Dimension scrSize=Toolkit.getDefaultToolkit().getScreenSize();
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, (int) (0.7*scrSize.getWidth()), javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)        
                        .addGap(42, 42, 42))
                        .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGap(18,18,18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, (int) (0.65*scrSize.getHeight()), javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))).addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        name.clear();  //点击“浏览”按钮，清除已选歌曲
        count = 0 ;
        int r = tableModel.getRowCount();
        for(int e = 0;e<r;e++)
            tableModel.removeRow(0);
        
       JFileChooser chooser = new JFileChooser();
       chooser.setMultiSelectionEnabled(true); 
       chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
       ExampleFileFilter filter = new ExampleFileFilter();    //文件过滤器模板
//       filter.addExtension("jpg");
//       filter.addExtension("gif");
       filter.addExtension("avi");
       filter.addExtension("wmv");
      // filter.addExtension("mp4");
       filter.addExtension("3gp");
       filter.addExtension("flv");
       filter.addExtension("rmvb");
       filter.setDescription("Video");
       chooser.setFileFilter(filter);
       chooser.setCurrentDirectory(new File("."));
     //  System.out.println(count+"oooooooo");
        int result = chooser.showOpenDialog(null);
        String path = "";
        // if file selected, set it as icon of the label
        if (result == JFileChooser.APPROVE_OPTION) {
            File file[] = chooser.getSelectedFiles();
            if (file[0].isDirectory()) {   //判断选择的是否是文件夹
                String s = file[0].getPath();
//             System.out.println(chooser.getCurrentDirectory()+"kkk");
//             System.out.println(chooser.getSelectedFile().getName()+"ooo");
                String[] fileGroup = file[0].list();
                for(int n=0;n<fileGroup.length;n++){
                    path = s+"\\"+fileGroup[n];
                    if (name.contains(path)) {
                        System.out.println("already exist!");
                        return;
                    }
                    name.add(path);
                }
          }else {    //选择的是文件
            for(int m=0;m<file.length;m++){
                path = file[m].getPath();
                if (name.contains(path)) {
                    System.out.println("already exist!");
                    return;
                }
                name.add(path);
             }
          }       
           
            
                    count = name.size() ; 
                    int co = 0;
                    for(int l=0;l<count;l++){
                        ConvertVideo.getPath();

                        ConvertVideo.inputPath = name.get(co);
                        if (! ConvertVideo.checkfile( ConvertVideo.inputPath)) {
                            
                            System.out.println( ConvertVideo.inputPath + " is not file");
                            name.remove(co);
                           // System.out.println(name.size()+"bbbbbb");
                            continue;
                            
                        }else if ((ConvertVideo.checkContentType()!=0)&&(ConvertVideo.checkContentType()!=1)) {  //判断是否是指定的视频格式
                            System.out.println( ConvertVideo.inputPath + " isn't in correct formats");
                            name.remove(co);
                            continue;
                        }
                    //System.out.println(ConvertVideo.inputPath+"ppp");
                    sb = ConvertVideo.analysis(name.get(co));
                    name1 = name.get(co).substring(name.get(co).lastIndexOf("\\") + 1);
                    File f = new File(name.get(co));
                    datasize = f.length(); 
                    datasize = ((int)((datasize*100.0/1024/1024))*1.0/100);
                    duration = sb.substring(sb.indexOf("Duration")+10,sb.indexOf(", start")-3);
                    
                    timeall[co] = ConvertVideo.timeToSec(duration); //存储每首歌的时长
                    
                    if (ConvertVideo.checkContentType()==0)
                        size = sb.substring(sb.lastIndexOf("x")-4,sb.lastIndexOf("x")+5);
                    else if (ConvertVideo.checkContentType()==1)
                    {
                        String sb1 = sb.substring(sb.indexOf("Stream #0:1"),sb.length());
                        int temp = sb1.indexOf("yuv");
                        size = sb1.substring(sb1.indexOf("x",temp)-4,sb1.indexOf("x",temp)+5);
                    }
                    if(!Character.isDigit(size.charAt(size.length()-1)))
                        size = size.substring(0,size.length()-1);
                    sizeall[co] = size;
                    bitrate = sb.substring(sb.lastIndexOf("bitrate")+9,sb.indexOf("kb/s")-1); 
                    String []rowValues = {name1,String.valueOf(datasize)+"M",duration,size,bitrate+"kb/s"};
                    tableModel.addRow(rowValues);  //添加一行
                    co++;
                 }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        height = 240;
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
    }
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        height = 360;
        jCheckBox1.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
    }
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        height = 480;
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
    }
    
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        height = 720;
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox5.setSelected(false);
    }
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        height = 1080;
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jButton2.setEnabled(false);  //点击“开始”按钮，“开始”按钮变灰
        flag = false; //“暂停”标志，为“真”时是暂停状态
        if(start==false&&name.size()!=0){
            start = true; //“开始”标志，为“真”时表示点击过“开始”按钮
            Buttton2_1 b1=new Buttton2_1();  
            Thread demo1= new Thread(b1);  
            demo1.start(); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed
   
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        flag = true;  //设置“暂停”标志为“真”
        jButton2.setEnabled(true);  //设置“开始”按钮可见
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Videoview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Videoview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Videoview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Videoview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Videoview().setVisible(true);
            }
        });
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    public static javax.swing.JProgressBar progressbar;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    public static DefaultTableModel tableModel;
    // End of variables declaration//GEN-END:variables

    public static List<String> name = new ArrayList<String>();
    public static int count = 0;
    public static int i ;
    public static int height = 480;
    public static String sb = "";
    public static String name1 = "";
    public static double datasize = 0;
    public static String duration = "";
    private String duration1 = "";
    public static String size = "";
    public static String bitrate= "";
    public static int timeall[] = new int[1000];
    public static String sizeall[] = new String[1000];
    public static boolean flag = false ;
    public static boolean start = false ;
    
    
    private String[] columnNames = {"名称",
                                    "大小",
                                    "时长",
                                    "屏幕尺寸",
                                    "码率" };
    private String [][] tableVales;
    
     
}
